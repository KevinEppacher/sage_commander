from launch import LaunchDescription
from launch_ros.actions import LifecycleNode, Node
from launch.actions import TimerAction, RegisterEventHandler
from launch.event_handlers import OnProcessStart
from launch_ros.substitutions import FindPackageShare
import os


def generate_launch_description():
    package_name = 'sage_commander'

    # Find config and rviz path
    openfusion_ros_share = FindPackageShare('openfusion_ros').find('openfusion_ros')
    openfusion_ros_param_file = os.path.join(openfusion_ros_share, 'config', 'openfusion_ros.yml')

    openfusion_ros_node = Node(
        package='openfusion_ros',
        executable='main',
        name="openfusion_node",
        namespace='openfusion',
        output='screen',
        emulate_tty=True,
        parameters=[openfusion_ros_param_file]
    )

    # Find config and rviz path
    cloud_cluster_share = FindPackageShare('cloud_cluster').find('cloud_cluster')
    cloud_cluster_param_file = os.path.join(cloud_cluster_share, 'config', 'cloud_cluster.yaml')
    print(cloud_cluster_param_file)

    cloud_cluster_node = Node(
        package='cloud_cluster',
        executable='cloud_cluster_node',
        name="cloud_cluster_node",
        namespace='cloud_cluster',
        output='screen',
        emulate_tty=True,
        parameters=[cloud_cluster_param_file],
        # arguments=['--ros-args', '--log-level', 'debug']
    )

    return LaunchDescription([
        openfusion_ros_node,
        cloud_cluster_node
    ])
